syntax = "proto3";

package auth;

option go_package = "github.com/Acad600-Tpa/WEB-MV-242/services/auth/proto";

// Auth service definition
service AuthService {
  // Login with email and password
  rpc Login (LoginRequest) returns (TokenResponse) {}
  
  // Register a new user (Step 1)
  rpc Register (RegisterRequest) returns (RegistrationResponse) {}
  
  // Verify email with verification code (Step 2)
  rpc VerifyEmail (VerifyEmailRequest) returns (TokenResponse) {}
  
  // Resend verification code
  rpc ResendVerificationCode (ResendCodeRequest) returns (ResendCodeResponse) {}
  
  // Google OAuth integration
  rpc GoogleAuth (GoogleAuthRequest) returns (TokenResponse) {}
  
  // Validate token
  rpc ValidateToken (ValidateRequest) returns (ValidateResponse) {}
  
  // Refresh access token using refresh token
  rpc RefreshToken (RefreshRequest) returns (TokenResponse) {}
  
  // Logout and invalidate tokens
  rpc Logout (LogoutRequest) returns (LogoutResponse) {}
}

// LoginRequest contains credentials for user login
message LoginRequest {
  string email = 1;
  string password = 2;
}

// RegisterRequest contains information needed to register a new user
message RegisterRequest {
  string name = 1;
  string email = 2;
  string username = 3;
  string password = 4;
  string confirm_password = 5;
  string gender = 6;
  string date_of_birth = 7;  // Format: YYYY-MM-DD
  bytes profile_picture = 8;
  bytes banner = 9;
  string security_question = 10;
  string security_answer = 11;
  bool subscribe_to_newsletter = 12;
  string recaptcha_token = 13;  // Token from frontend reCAPTCHA verification
}

// VerifyEmailRequest contains the verification code for email validation
message VerifyEmailRequest {
  string email = 1;
  string verification_code = 2;
}

// ResendCodeRequest contains the email to send a new verification code to
message ResendCodeRequest {
  string email = 1;
}

// ResendCodeResponse contains the result of the resend operation
message ResendCodeResponse {
  bool success = 1;
  string message = 2;
}

// GoogleAuthRequest contains the Google OAuth data
message GoogleAuthRequest {
  string token_id = 1;
}

// RegistrationResponse contains registration confirmation
message RegistrationResponse {
  bool success = 1;
  string message = 2;
  string email = 3;
}

// ValidateRequest contains the token to validate
message ValidateRequest {
  string token = 1;
}

// ValidateResponse contains validation result
message ValidateResponse {
  bool valid = 1;
  string user_id = 2;
  map<string, string> claims = 3;
}

// RefreshRequest contains the refresh token
message RefreshRequest {
  string refresh_token = 1;
}

// TokenResponse contains authentication tokens
message TokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  string user_id = 3;
  string token_type = 4; // Usually "Bearer"
  int64 expires_in = 5;  // Expiration time in seconds
}

// LogoutRequest contains tokens to invalidate
message LogoutRequest {
  string access_token = 1;
  string refresh_token = 2;
}

// LogoutResponse indicates the result of logout operation
message LogoutResponse {
  bool success = 1;
  string message = 2;
} 