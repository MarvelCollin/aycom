syntax = "proto3";

package product;

option go_package = "github.com/Acad600-Tpa/WEB-MV-242/services/product/proto";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// Product service definition
service ProductService {
  // List all products with optional filtering
  rpc ListProducts (ListProductsRequest) returns (ListProductsResponse) {}
  
  // Get product by ID
  rpc GetProduct (GetProductRequest) returns (ProductResponse) {}
  
  // Create a new product
  rpc CreateProduct (CreateProductRequest) returns (ProductResponse) {}
  
  // Update an existing product
  rpc UpdateProduct (UpdateProductRequest) returns (ProductResponse) {}
  
  // Delete a product
  rpc DeleteProduct (DeleteProductRequest) returns (google.protobuf.Empty) {}
  
  // Search products
  rpc SearchProducts (SearchProductsRequest) returns (ListProductsResponse) {}
}

// Product category
enum ProductCategory {
  CATEGORY_UNSPECIFIED = 0;
  CATEGORY_ELECTRONICS = 1;
  CATEGORY_CLOTHING = 2;
  CATEGORY_BOOKS = 3;
  CATEGORY_FOOD = 4;
  CATEGORY_FURNITURE = 5;
  // Add more categories as needed
}

// Product represents a product item
message Product {
  string id = 1;
  string name = 2;
  string description = 3;
  string image_url = 4;
  double price = 5;
  int32 stock = 6;
  ProductCategory category = 7;
  repeated string tags = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

// ListProductsRequest contains parameters for listing products
message ListProductsRequest {
  int32 page = 1;
  int32 page_size = 2;
  string sort_by = 3;
  bool sort_desc = 4;
  ProductCategory category = 5;
  double min_price = 6;
  double max_price = 7;
}

// ListProductsResponse contains product list with pagination info
message ListProductsResponse {
  repeated Product products = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
  int32 total_pages = 5;
}

// GetProductRequest contains the product ID to retrieve
message GetProductRequest {
  string id = 1;
}

// CreateProductRequest contains data for creating a new product
message CreateProductRequest {
  string name = 1;
  string description = 2;
  string image_url = 3;
  double price = 4;
  int32 stock = 5;
  ProductCategory category = 6;
  repeated string tags = 7;
}

// UpdateProductRequest contains data for updating an existing product
message UpdateProductRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string image_url = 4;
  double price = 5;
  int32 stock = 6;
  ProductCategory category = 7;
  repeated string tags = 8;
}

// DeleteProductRequest contains the product ID to delete
message DeleteProductRequest {
  string id = 1;
}

// SearchProductsRequest contains search query for products
message SearchProductsRequest {
  string query = 1;
  int32 page = 2;
  int32 page_size = 3;
  ProductCategory category = 4;
}

// ProductResponse contains a single product response
message ProductResponse {
  Product product = 1;
} 