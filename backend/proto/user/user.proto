syntax = "proto3";

package user;

option go_package = "aycom/backend/proto/user";

import "google/protobuf/timestamp.proto";

// User service definition
service UserService {
  // Get user by ID
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
  
  // Register a new user
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  
  // Update user information
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  
  // Delete a user
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
  
  // Update user verification status
  rpc UpdateUserVerificationStatus(UpdateUserVerificationStatusRequest) returns (UpdateUserVerificationStatusResponse) {}

  // Authenticate a user
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {}

  // Get user by email
  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse) {}
}

// User contains user information
message User {
  string id = 1;
  string name = 2;
  string username = 3;
  string email = 4;
  string gender = 5;
  string date_of_birth = 6;
  string bio = 7;
  string location = 8;
  string website = 9;
  string profile_picture_url = 10;
  string banner_url = 11;
  string created_at = 12;
  string updated_at = 13;

  // Added fields for registration
  string password = 14; // Raw password sent from gateway, hashed by user service
  string security_question = 15;
  string security_answer = 16;
  bool subscribe_to_newsletter = 17;
}

// GetUserRequest is used to request user information by ID
message GetUserRequest {
  string user_id = 1;
}

// GetUserResponse contains user information
message GetUserResponse {
  User user = 1;
}

// CreateUserRequest contains information needed to register a new user
message CreateUserRequest {
  User user = 1;
}

// CreateUserResponse contains the result of a create operation
message CreateUserResponse {
  User user = 1;
}

// UpdateUserRequest contains updated user information
message UpdateUserRequest {
  User user = 1;
  string user_id = 2;
  string name = 3;
  string email = 4;
  string profile_picture_url = 5;
  string banner_url = 6;
}

// UpdateUserResponse contains the result of an update operation
message UpdateUserResponse {
  User user = 1;
}

// DeleteUserRequest contains user ID to delete
message DeleteUserRequest {
  string user_id = 1;
}

// DeleteUserResponse indicates the result of a delete operation
message DeleteUserResponse {
  bool success = 1;
  string message = 2;
}

// UpdateUserVerificationStatusRequest contains request to update user verification status
message UpdateUserVerificationStatusRequest {
  string user_id = 1;
  bool is_verified = 2;
}

// UpdateUserVerificationStatusResponse contains response to update user verification status
message UpdateUserVerificationStatusResponse {
  bool success = 1;
  string message = 2;
}

// Request for user login
message LoginUserRequest {
  string email = 1;
  string password = 2;
}

// Response for user login, containing user details if successful
message LoginUserResponse {
  User user = 1; // Return the full user object on successful login
}

// Request for getting user by email
message GetUserByEmailRequest {
  string email = 1;
}

// Response for getting user by email
message GetUserByEmailResponse {
  User user = 1;
} 