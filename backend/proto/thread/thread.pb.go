// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: proto/thread/thread.proto

package thread

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Thread struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content         string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Media           []*Media               `protobuf:"bytes,4,rep,name=media,proto3" json:"media,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ViewCount       int64                  `protobuf:"varint,7,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	Poll            *Poll                  `protobuf:"bytes,8,opt,name=poll,proto3,oneof" json:"poll,omitempty"`
	CommunityId     *string                `protobuf:"bytes,9,opt,name=community_id,json=communityId,proto3,oneof" json:"community_id,omitempty"`
	IsPinned        *bool                  `protobuf:"varint,10,opt,name=is_pinned,json=isPinned,proto3,oneof" json:"is_pinned,omitempty"`
	WhoCanReply     *string                `protobuf:"bytes,11,opt,name=who_can_reply,json=whoCanReply,proto3,oneof" json:"who_can_reply,omitempty"`
	ScheduledAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=scheduled_at,json=scheduledAt,proto3,oneof" json:"scheduled_at,omitempty"`
	IsAdvertisement *bool                  `protobuf:"varint,13,opt,name=is_advertisement,json=isAdvertisement,proto3,oneof" json:"is_advertisement,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Thread) Reset() {
	*x = Thread{}
	mi := &file_proto_thread_thread_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thread) ProtoMessage() {}

func (x *Thread) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thread.ProtoReflect.Descriptor instead.
func (*Thread) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{0}
}

func (x *Thread) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Thread) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Thread) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Thread) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *Thread) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Thread) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Thread) GetViewCount() int64 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *Thread) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *Thread) GetCommunityId() string {
	if x != nil && x.CommunityId != nil {
		return *x.CommunityId
	}
	return ""
}

func (x *Thread) GetIsPinned() bool {
	if x != nil && x.IsPinned != nil {
		return *x.IsPinned
	}
	return false
}

func (x *Thread) GetWhoCanReply() string {
	if x != nil && x.WhoCanReply != nil {
		return *x.WhoCanReply
	}
	return ""
}

func (x *Thread) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *Thread) GetIsAdvertisement() bool {
	if x != nil && x.IsAdvertisement != nil {
		return *x.IsAdvertisement
	}
	return false
}

type Media struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_proto_thread_thread_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{1}
}

func (x *Media) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Media) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Media) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Poll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Question      string                 `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	Options       []*PollOption          `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	IsAnonymous   bool                   `protobuf:"varint,5,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Poll) Reset() {
	*x = Poll{}
	mi := &file_proto_thread_thread_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Poll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poll) ProtoMessage() {}

func (x *Poll) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poll.ProtoReflect.Descriptor instead.
func (*Poll) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{2}
}

func (x *Poll) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Poll) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *Poll) GetOptions() []*PollOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Poll) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Poll) GetIsAnonymous() bool {
	if x != nil {
		return x.IsAnonymous
	}
	return false
}

type PollOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollOption) Reset() {
	*x = PollOption{}
	mi := &file_proto_thread_thread_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollOption) ProtoMessage() {}

func (x *PollOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollOption.ProtoReflect.Descriptor instead.
func (*PollOption) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{3}
}

func (x *PollOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PollOption) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Reply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ThreadId      string                 `protobuf:"bytes,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Media         []*Media               `protobuf:"bytes,5,rep,name=media,proto3" json:"media,omitempty"`
	ParentId      string                 `protobuf:"bytes,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsPinned      *bool                  `protobuf:"varint,9,opt,name=is_pinned,json=isPinned,proto3,oneof" json:"is_pinned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reply) Reset() {
	*x = Reply{}
	mi := &file_proto_thread_thread_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{4}
}

func (x *Reply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Reply) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *Reply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Reply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Reply) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *Reply) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Reply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Reply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Reply) GetIsPinned() bool {
	if x != nil && x.IsPinned != nil {
		return *x.IsPinned
	}
	return false
}

type CreateThreadRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UserId           string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content          string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Media            []*Media               `protobuf:"bytes,3,rep,name=media,proto3" json:"media,omitempty"`
	Poll             *PollRequest           `protobuf:"bytes,4,opt,name=poll,proto3,oneof" json:"poll,omitempty"`
	CommunityId      *string                `protobuf:"bytes,5,opt,name=community_id,json=communityId,proto3,oneof" json:"community_id,omitempty"`
	ScheduledAt      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=scheduled_at,json=scheduledAt,proto3,oneof" json:"scheduled_at,omitempty"`
	WhoCanReply      *string                `protobuf:"bytes,7,opt,name=who_can_reply,json=whoCanReply,proto3,oneof" json:"who_can_reply,omitempty"`
	IsAdvertisement  *bool                  `protobuf:"varint,8,opt,name=is_advertisement,json=isAdvertisement,proto3,oneof" json:"is_advertisement,omitempty"`
	Hashtags         []string               `protobuf:"bytes,9,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	MentionedUserIds []string               `protobuf:"bytes,10,rep,name=mentioned_user_ids,json=mentionedUserIds,proto3" json:"mentioned_user_ids,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateThreadRequest) Reset() {
	*x = CreateThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThreadRequest) ProtoMessage() {}

func (x *CreateThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThreadRequest.ProtoReflect.Descriptor instead.
func (*CreateThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{5}
}

func (x *CreateThreadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateThreadRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateThreadRequest) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *CreateThreadRequest) GetPoll() *PollRequest {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *CreateThreadRequest) GetCommunityId() string {
	if x != nil && x.CommunityId != nil {
		return *x.CommunityId
	}
	return ""
}

func (x *CreateThreadRequest) GetScheduledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledAt
	}
	return nil
}

func (x *CreateThreadRequest) GetWhoCanReply() string {
	if x != nil && x.WhoCanReply != nil {
		return *x.WhoCanReply
	}
	return ""
}

func (x *CreateThreadRequest) GetIsAdvertisement() bool {
	if x != nil && x.IsAdvertisement != nil {
		return *x.IsAdvertisement
	}
	return false
}

func (x *CreateThreadRequest) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *CreateThreadRequest) GetMentionedUserIds() []string {
	if x != nil {
		return x.MentionedUserIds
	}
	return nil
}

type PollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      string                 `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Options       []string               `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	IsAnonymous   bool                   `protobuf:"varint,4,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollRequest) Reset() {
	*x = PollRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollRequest) ProtoMessage() {}

func (x *PollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollRequest.ProtoReflect.Descriptor instead.
func (*PollRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{6}
}

func (x *PollRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *PollRequest) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *PollRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *PollRequest) GetIsAnonymous() bool {
	if x != nil {
		return x.IsAnonymous
	}
	return false
}

type GetThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThreadRequest) Reset() {
	*x = GetThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThreadRequest) ProtoMessage() {}

func (x *GetThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThreadRequest.ProtoReflect.Descriptor instead.
func (*GetThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{7}
}

func (x *GetThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

type GetThreadsByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThreadsByUserRequest) Reset() {
	*x = GetThreadsByUserRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThreadsByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThreadsByUserRequest) ProtoMessage() {}

func (x *GetThreadsByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThreadsByUserRequest.ProtoReflect.Descriptor instead.
func (*GetThreadsByUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{8}
}

func (x *GetThreadsByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetThreadsByUserRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetThreadsByUserRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAllThreadsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllThreadsRequest) Reset() {
	*x = GetAllThreadsRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllThreadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllThreadsRequest) ProtoMessage() {}

func (x *GetAllThreadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllThreadsRequest.ProtoReflect.Descriptor instead.
func (*GetAllThreadsRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllThreadsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllThreadsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type UpdateThreadRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ThreadId            string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId              string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content             string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Media               []*Media               `protobuf:"bytes,4,rep,name=media,proto3" json:"media,omitempty"`
	IsPinned            *bool                  `protobuf:"varint,5,opt,name=is_pinned,json=isPinned,proto3,oneof" json:"is_pinned,omitempty"`
	AddCategoryNames    []string               `protobuf:"bytes,6,rep,name=add_category_names,json=addCategoryNames,proto3" json:"add_category_names,omitempty"`
	RemoveCategoryNames []string               `protobuf:"bytes,7,rep,name=remove_category_names,json=removeCategoryNames,proto3" json:"remove_category_names,omitempty"`
	AddHashtags         []string               `protobuf:"bytes,8,rep,name=add_hashtags,json=addHashtags,proto3" json:"add_hashtags,omitempty"`
	RemoveHashtags      []string               `protobuf:"bytes,9,rep,name=remove_hashtags,json=removeHashtags,proto3" json:"remove_hashtags,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UpdateThreadRequest) Reset() {
	*x = UpdateThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateThreadRequest) ProtoMessage() {}

func (x *UpdateThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateThreadRequest.ProtoReflect.Descriptor instead.
func (*UpdateThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *UpdateThreadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateThreadRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateThreadRequest) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *UpdateThreadRequest) GetIsPinned() bool {
	if x != nil && x.IsPinned != nil {
		return *x.IsPinned
	}
	return false
}

func (x *UpdateThreadRequest) GetAddCategoryNames() []string {
	if x != nil {
		return x.AddCategoryNames
	}
	return nil
}

func (x *UpdateThreadRequest) GetRemoveCategoryNames() []string {
	if x != nil {
		return x.RemoveCategoryNames
	}
	return nil
}

func (x *UpdateThreadRequest) GetAddHashtags() []string {
	if x != nil {
		return x.AddHashtags
	}
	return nil
}

func (x *UpdateThreadRequest) GetRemoveHashtags() []string {
	if x != nil {
		return x.RemoveHashtags
	}
	return nil
}

type DeleteThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteThreadRequest) Reset() {
	*x = DeleteThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteThreadRequest) ProtoMessage() {}

func (x *DeleteThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteThreadRequest.ProtoReflect.Descriptor instead.
func (*DeleteThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *DeleteThreadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateReplyRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ThreadId         string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content          string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Media            []*Media               `protobuf:"bytes,4,rep,name=media,proto3" json:"media,omitempty"`
	ParentId         string                 `protobuf:"bytes,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	ParentReplyId    *string                `protobuf:"bytes,6,opt,name=parent_reply_id,json=parentReplyId,proto3,oneof" json:"parent_reply_id,omitempty"`
	MentionedUserIds []string               `protobuf:"bytes,7,rep,name=mentioned_user_ids,json=mentionedUserIds,proto3" json:"mentioned_user_ids,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateReplyRequest) Reset() {
	*x = CreateReplyRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReplyRequest) ProtoMessage() {}

func (x *CreateReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReplyRequest.ProtoReflect.Descriptor instead.
func (*CreateReplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{12}
}

func (x *CreateReplyRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *CreateReplyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateReplyRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateReplyRequest) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *CreateReplyRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *CreateReplyRequest) GetParentReplyId() string {
	if x != nil && x.ParentReplyId != nil {
		return *x.ParentReplyId
	}
	return ""
}

func (x *CreateReplyRequest) GetMentionedUserIds() []string {
	if x != nil {
		return x.MentionedUserIds
	}
	return nil
}

type GetRepliesByThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepliesByThreadRequest) Reset() {
	*x = GetRepliesByThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepliesByThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepliesByThreadRequest) ProtoMessage() {}

func (x *GetRepliesByThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepliesByThreadRequest.ProtoReflect.Descriptor instead.
func (*GetRepliesByThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{13}
}

func (x *GetRepliesByThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *GetRepliesByThreadRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRepliesByThreadRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type UpdateReplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Media         []*Media               `protobuf:"bytes,4,rep,name=media,proto3" json:"media,omitempty"`
	IsPinned      *bool                  `protobuf:"varint,5,opt,name=is_pinned,json=isPinned,proto3,oneof" json:"is_pinned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReplyRequest) Reset() {
	*x = UpdateReplyRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReplyRequest) ProtoMessage() {}

func (x *UpdateReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReplyRequest.ProtoReflect.Descriptor instead.
func (*UpdateReplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateReplyRequest) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *UpdateReplyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateReplyRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateReplyRequest) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *UpdateReplyRequest) GetIsPinned() bool {
	if x != nil && x.IsPinned != nil {
		return *x.IsPinned
	}
	return false
}

type DeleteReplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteReplyRequest) Reset() {
	*x = DeleteReplyRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReplyRequest) ProtoMessage() {}

func (x *DeleteReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReplyRequest.ProtoReflect.Descriptor instead.
func (*DeleteReplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteReplyRequest) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *DeleteReplyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LikeThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeThreadRequest) Reset() {
	*x = LikeThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeThreadRequest) ProtoMessage() {}

func (x *LikeThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeThreadRequest.ProtoReflect.Descriptor instead.
func (*LikeThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{16}
}

func (x *LikeThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *LikeThreadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UnlikeThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeThreadRequest) Reset() {
	*x = UnlikeThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeThreadRequest) ProtoMessage() {}

func (x *UnlikeThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeThreadRequest.ProtoReflect.Descriptor instead.
func (*UnlikeThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{17}
}

func (x *UnlikeThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *UnlikeThreadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LikeReplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeReplyRequest) Reset() {
	*x = LikeReplyRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeReplyRequest) ProtoMessage() {}

func (x *LikeReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeReplyRequest.ProtoReflect.Descriptor instead.
func (*LikeReplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{18}
}

func (x *LikeReplyRequest) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *LikeReplyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UnlikeReplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeReplyRequest) Reset() {
	*x = UnlikeReplyRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeReplyRequest) ProtoMessage() {}

func (x *UnlikeReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeReplyRequest.ProtoReflect.Descriptor instead.
func (*UnlikeReplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{19}
}

func (x *UnlikeReplyRequest) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *UnlikeReplyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RepostThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AddedContent  *string                `protobuf:"bytes,3,opt,name=added_content,json=addedContent,proto3,oneof" json:"added_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepostThreadRequest) Reset() {
	*x = RepostThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepostThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepostThreadRequest) ProtoMessage() {}

func (x *RepostThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepostThreadRequest.ProtoReflect.Descriptor instead.
func (*RepostThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{20}
}

func (x *RepostThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *RepostThreadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RepostThreadRequest) GetAddedContent() string {
	if x != nil && x.AddedContent != nil {
		return *x.AddedContent
	}
	return ""
}

type RemoveRepostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRepostRequest) Reset() {
	*x = RemoveRepostRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRepostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRepostRequest) ProtoMessage() {}

func (x *RemoveRepostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRepostRequest.ProtoReflect.Descriptor instead.
func (*RemoveRepostRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveRepostRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *RemoveRepostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type BookmarkThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookmarkThreadRequest) Reset() {
	*x = BookmarkThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookmarkThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookmarkThreadRequest) ProtoMessage() {}

func (x *BookmarkThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookmarkThreadRequest.ProtoReflect.Descriptor instead.
func (*BookmarkThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{22}
}

func (x *BookmarkThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *BookmarkThreadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveBookmarkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBookmarkRequest) Reset() {
	*x = RemoveBookmarkRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBookmarkRequest) ProtoMessage() {}

func (x *RemoveBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBookmarkRequest.ProtoReflect.Descriptor instead.
func (*RemoveBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveBookmarkRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *RemoveBookmarkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreatePollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	Poll          *PollRequest           `protobuf:"bytes,2,opt,name=poll,proto3" json:"poll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePollRequest) Reset() {
	*x = CreatePollRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollRequest) ProtoMessage() {}

func (x *CreatePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollRequest.ProtoReflect.Descriptor instead.
func (*CreatePollRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{24}
}

func (x *CreatePollRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *CreatePollRequest) GetPoll() *PollRequest {
	if x != nil {
		return x.Poll
	}
	return nil
}

type VotePollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PollId        string                 `protobuf:"bytes,1,opt,name=poll_id,json=pollId,proto3" json:"poll_id,omitempty"`
	OptionId      string                 `protobuf:"bytes,2,opt,name=option_id,json=optionId,proto3" json:"option_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VotePollRequest) Reset() {
	*x = VotePollRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VotePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VotePollRequest) ProtoMessage() {}

func (x *VotePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VotePollRequest.ProtoReflect.Descriptor instead.
func (*VotePollRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{25}
}

func (x *VotePollRequest) GetPollId() string {
	if x != nil {
		return x.PollId
	}
	return ""
}

func (x *VotePollRequest) GetOptionId() string {
	if x != nil {
		return x.OptionId
	}
	return ""
}

func (x *VotePollRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetPollResultsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PollId        string                 `protobuf:"bytes,1,opt,name=poll_id,json=pollId,proto3" json:"poll_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPollResultsRequest) Reset() {
	*x = GetPollResultsRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPollResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPollResultsRequest) ProtoMessage() {}

func (x *GetPollResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPollResultsRequest.ProtoReflect.Descriptor instead.
func (*GetPollResultsRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{26}
}

func (x *GetPollResultsRequest) GetPollId() string {
	if x != nil {
		return x.PollId
	}
	return ""
}

type ThreadResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Thread           *Thread                `protobuf:"bytes,1,opt,name=thread,proto3" json:"thread,omitempty"`
	User             *User                  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	LikesCount       int64                  `protobuf:"varint,3,opt,name=likes_count,json=likesCount,proto3" json:"likes_count,omitempty"`
	RepliesCount     int64                  `protobuf:"varint,4,opt,name=replies_count,json=repliesCount,proto3" json:"replies_count,omitempty"`
	RepostsCount     int64                  `protobuf:"varint,5,opt,name=reposts_count,json=repostsCount,proto3" json:"reposts_count,omitempty"`
	LikedByUser      bool                   `protobuf:"varint,6,opt,name=liked_by_user,json=likedByUser,proto3" json:"liked_by_user,omitempty"`
	RepostedByUser   bool                   `protobuf:"varint,7,opt,name=reposted_by_user,json=repostedByUser,proto3" json:"reposted_by_user,omitempty"`
	BookmarkedByUser bool                   `protobuf:"varint,8,opt,name=bookmarked_by_user,json=bookmarkedByUser,proto3" json:"bookmarked_by_user,omitempty"`
	Poll             *PollResponse          `protobuf:"bytes,9,opt,name=poll,proto3,oneof" json:"poll,omitempty"`
	Hashtags         []string               `protobuf:"bytes,10,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	MentionedUserIds []string               `protobuf:"bytes,11,rep,name=mentioned_user_ids,json=mentionedUserIds,proto3" json:"mentioned_user_ids,omitempty"`
	// New fields for repost functionality
	IsRepost         bool            `protobuf:"varint,12,opt,name=is_repost,json=isRepost,proto3" json:"is_repost,omitempty"`
	OriginalThreadId *string         `protobuf:"bytes,13,opt,name=original_thread_id,json=originalThreadId,proto3,oneof" json:"original_thread_id,omitempty"`
	OriginalThread   *ThreadResponse `protobuf:"bytes,14,opt,name=original_thread,json=originalThread,proto3,oneof" json:"original_thread,omitempty"` // For storing the original thread data
	BookmarkCount    int64           `protobuf:"varint,15,opt,name=bookmark_count,json=bookmarkCount,proto3" json:"bookmark_count,omitempty"`         // Number of bookmarks for the thread
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ThreadResponse) Reset() {
	*x = ThreadResponse{}
	mi := &file_proto_thread_thread_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadResponse) ProtoMessage() {}

func (x *ThreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadResponse.ProtoReflect.Descriptor instead.
func (*ThreadResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{27}
}

func (x *ThreadResponse) GetThread() *Thread {
	if x != nil {
		return x.Thread
	}
	return nil
}

func (x *ThreadResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ThreadResponse) GetLikesCount() int64 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

func (x *ThreadResponse) GetRepliesCount() int64 {
	if x != nil {
		return x.RepliesCount
	}
	return 0
}

func (x *ThreadResponse) GetRepostsCount() int64 {
	if x != nil {
		return x.RepostsCount
	}
	return 0
}

func (x *ThreadResponse) GetLikedByUser() bool {
	if x != nil {
		return x.LikedByUser
	}
	return false
}

func (x *ThreadResponse) GetRepostedByUser() bool {
	if x != nil {
		return x.RepostedByUser
	}
	return false
}

func (x *ThreadResponse) GetBookmarkedByUser() bool {
	if x != nil {
		return x.BookmarkedByUser
	}
	return false
}

func (x *ThreadResponse) GetPoll() *PollResponse {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *ThreadResponse) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *ThreadResponse) GetMentionedUserIds() []string {
	if x != nil {
		return x.MentionedUserIds
	}
	return nil
}

func (x *ThreadResponse) GetIsRepost() bool {
	if x != nil {
		return x.IsRepost
	}
	return false
}

func (x *ThreadResponse) GetOriginalThreadId() string {
	if x != nil && x.OriginalThreadId != nil {
		return *x.OriginalThreadId
	}
	return ""
}

func (x *ThreadResponse) GetOriginalThread() *ThreadResponse {
	if x != nil {
		return x.OriginalThread
	}
	return nil
}

func (x *ThreadResponse) GetBookmarkCount() int64 {
	if x != nil {
		return x.BookmarkCount
	}
	return 0
}

type ThreadsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Threads       []*ThreadResponse      `protobuf:"bytes,1,rep,name=threads,proto3" json:"threads,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThreadsResponse) Reset() {
	*x = ThreadsResponse{}
	mi := &file_proto_thread_thread_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThreadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadsResponse) ProtoMessage() {}

func (x *ThreadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadsResponse.ProtoReflect.Descriptor instead.
func (*ThreadsResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{28}
}

func (x *ThreadsResponse) GetThreads() []*ThreadResponse {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *ThreadsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetRepliesByParentReplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentReplyId string                 `protobuf:"bytes,1,opt,name=parent_reply_id,json=parentReplyId,proto3" json:"parent_reply_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepliesByParentReplyRequest) Reset() {
	*x = GetRepliesByParentReplyRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepliesByParentReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepliesByParentReplyRequest) ProtoMessage() {}

func (x *GetRepliesByParentReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepliesByParentReplyRequest.ProtoReflect.Descriptor instead.
func (*GetRepliesByParentReplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{29}
}

func (x *GetRepliesByParentReplyRequest) GetParentReplyId() string {
	if x != nil {
		return x.ParentReplyId
	}
	return ""
}

func (x *GetRepliesByParentReplyRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRepliesByParentReplyRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ReplyResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Reply            *Reply                 `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	User             *User                  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	LikesCount       int64                  `protobuf:"varint,3,opt,name=likes_count,json=likesCount,proto3" json:"likes_count,omitempty"`
	LikedByUser      bool                   `protobuf:"varint,4,opt,name=liked_by_user,json=likedByUser,proto3" json:"liked_by_user,omitempty"`
	MentionedUserIds []string               `protobuf:"bytes,5,rep,name=mentioned_user_ids,json=mentionedUserIds,proto3" json:"mentioned_user_ids,omitempty"`
	ParentUser       *User                  `protobuf:"bytes,6,opt,name=parent_user,json=parentUser,proto3" json:"parent_user,omitempty"`
	ParentContent    *string                `protobuf:"bytes,7,opt,name=parent_content,json=parentContent,proto3,oneof" json:"parent_content,omitempty"`
	BookmarkCount    int64                  `protobuf:"varint,8,opt,name=bookmark_count,json=bookmarkCount,proto3" json:"bookmark_count,omitempty"`
	BookmarkedByUser bool                   `protobuf:"varint,9,opt,name=bookmarked_by_user,json=bookmarkedByUser,proto3" json:"bookmarked_by_user,omitempty"`
	RepliesCount     int64                  `protobuf:"varint,10,opt,name=replies_count,json=repliesCount,proto3" json:"replies_count,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReplyResponse) Reset() {
	*x = ReplyResponse{}
	mi := &file_proto_thread_thread_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyResponse) ProtoMessage() {}

func (x *ReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyResponse.ProtoReflect.Descriptor instead.
func (*ReplyResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{30}
}

func (x *ReplyResponse) GetReply() *Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *ReplyResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ReplyResponse) GetLikesCount() int64 {
	if x != nil {
		return x.LikesCount
	}
	return 0
}

func (x *ReplyResponse) GetLikedByUser() bool {
	if x != nil {
		return x.LikedByUser
	}
	return false
}

func (x *ReplyResponse) GetMentionedUserIds() []string {
	if x != nil {
		return x.MentionedUserIds
	}
	return nil
}

func (x *ReplyResponse) GetParentUser() *User {
	if x != nil {
		return x.ParentUser
	}
	return nil
}

func (x *ReplyResponse) GetParentContent() string {
	if x != nil && x.ParentContent != nil {
		return *x.ParentContent
	}
	return ""
}

func (x *ReplyResponse) GetBookmarkCount() int64 {
	if x != nil {
		return x.BookmarkCount
	}
	return 0
}

func (x *ReplyResponse) GetBookmarkedByUser() bool {
	if x != nil {
		return x.BookmarkedByUser
	}
	return false
}

func (x *ReplyResponse) GetRepliesCount() int64 {
	if x != nil {
		return x.RepliesCount
	}
	return 0
}

type RepliesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Replies       []*ReplyResponse       `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepliesResponse) Reset() {
	*x = RepliesResponse{}
	mi := &file_proto_thread_thread_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepliesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepliesResponse) ProtoMessage() {}

func (x *RepliesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepliesResponse.ProtoReflect.Descriptor instead.
func (*RepliesResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{31}
}

func (x *RepliesResponse) GetReplies() []*ReplyResponse {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *RepliesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PollResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Poll             *Poll                  `protobuf:"bytes,1,opt,name=poll,proto3" json:"poll,omitempty"`
	Results          []*PollOptionResult    `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	TotalVotes       int64                  `protobuf:"varint,3,opt,name=total_votes,json=totalVotes,proto3" json:"total_votes,omitempty"`
	UserVoteOptionId *string                `protobuf:"bytes,4,opt,name=user_vote_option_id,json=userVoteOptionId,proto3,oneof" json:"user_vote_option_id,omitempty"`
	HasEnded         bool                   `protobuf:"varint,5,opt,name=has_ended,json=hasEnded,proto3" json:"has_ended,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PollResponse) Reset() {
	*x = PollResponse{}
	mi := &file_proto_thread_thread_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollResponse) ProtoMessage() {}

func (x *PollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollResponse.ProtoReflect.Descriptor instead.
func (*PollResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{32}
}

func (x *PollResponse) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *PollResponse) GetResults() []*PollOptionResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PollResponse) GetTotalVotes() int64 {
	if x != nil {
		return x.TotalVotes
	}
	return 0
}

func (x *PollResponse) GetUserVoteOptionId() string {
	if x != nil && x.UserVoteOptionId != nil {
		return *x.UserVoteOptionId
	}
	return ""
}

func (x *PollResponse) GetHasEnded() bool {
	if x != nil {
		return x.HasEnded
	}
	return false
}

type PollResultsResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Results          []*PollOptionResult    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalVotes       int64                  `protobuf:"varint,2,opt,name=total_votes,json=totalVotes,proto3" json:"total_votes,omitempty"`
	UserVoteOptionId *string                `protobuf:"bytes,3,opt,name=user_vote_option_id,json=userVoteOptionId,proto3,oneof" json:"user_vote_option_id,omitempty"`
	HasEnded         bool                   `protobuf:"varint,4,opt,name=has_ended,json=hasEnded,proto3" json:"has_ended,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PollResultsResponse) Reset() {
	*x = PollResultsResponse{}
	mi := &file_proto_thread_thread_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollResultsResponse) ProtoMessage() {}

func (x *PollResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollResultsResponse.ProtoReflect.Descriptor instead.
func (*PollResultsResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{33}
}

func (x *PollResultsResponse) GetResults() []*PollOptionResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PollResultsResponse) GetTotalVotes() int64 {
	if x != nil {
		return x.TotalVotes
	}
	return 0
}

func (x *PollResultsResponse) GetUserVoteOptionId() string {
	if x != nil && x.UserVoteOptionId != nil {
		return *x.UserVoteOptionId
	}
	return ""
}

func (x *PollResultsResponse) GetHasEnded() bool {
	if x != nil {
		return x.HasEnded
	}
	return false
}

type PollOptionResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OptionId      string                 `protobuf:"bytes,1,opt,name=option_id,json=optionId,proto3" json:"option_id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Votes         int64                  `protobuf:"varint,3,opt,name=votes,proto3" json:"votes,omitempty"`
	Percentage    float32                `protobuf:"fixed32,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollOptionResult) Reset() {
	*x = PollOptionResult{}
	mi := &file_proto_thread_thread_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollOptionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollOptionResult) ProtoMessage() {}

func (x *PollOptionResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollOptionResult.ProtoReflect.Descriptor instead.
func (*PollOptionResult) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{34}
}

func (x *PollOptionResult) GetOptionId() string {
	if x != nil {
		return x.OptionId
	}
	return ""
}

func (x *PollOptionResult) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PollOptionResult) GetVotes() int64 {
	if x != nil {
		return x.Votes
	}
	return 0
}

func (x *PollOptionResult) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

type User struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username          string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ProfilePictureUrl string                 `protobuf:"bytes,4,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	IsVerified        bool                   `protobuf:"varint,5,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_proto_thread_thread_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{35}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetProfilePictureUrl() string {
	if x != nil {
		return x.ProfilePictureUrl
	}
	return ""
}

func (x *User) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

type HashtagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HashtagResponse) Reset() {
	*x = HashtagResponse{}
	mi := &file_proto_thread_thread_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashtagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashtagResponse) ProtoMessage() {}

func (x *HashtagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashtagResponse.ProtoReflect.Descriptor instead.
func (*HashtagResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{36}
}

func (x *HashtagResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HashtagResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetTrendingHashtagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrendingHashtagsRequest) Reset() {
	*x = GetTrendingHashtagsRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrendingHashtagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrendingHashtagsRequest) ProtoMessage() {}

func (x *GetTrendingHashtagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrendingHashtagsRequest.ProtoReflect.Descriptor instead.
func (*GetTrendingHashtagsRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{37}
}

func (x *GetTrendingHashtagsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTrendingHashtagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hashtags      []*HashtagResponse     `protobuf:"bytes,1,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrendingHashtagsResponse) Reset() {
	*x = GetTrendingHashtagsResponse{}
	mi := &file_proto_thread_thread_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrendingHashtagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrendingHashtagsResponse) ProtoMessage() {}

func (x *GetTrendingHashtagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrendingHashtagsResponse.ProtoReflect.Descriptor instead.
func (*GetTrendingHashtagsResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{38}
}

func (x *GetTrendingHashtagsResponse) GetHashtags() []*HashtagResponse {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

type BookmarkReplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookmarkReplyRequest) Reset() {
	*x = BookmarkReplyRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookmarkReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookmarkReplyRequest) ProtoMessage() {}

func (x *BookmarkReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookmarkReplyRequest.ProtoReflect.Descriptor instead.
func (*BookmarkReplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{39}
}

func (x *BookmarkReplyRequest) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *BookmarkReplyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RemoveReplyBookmarkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveReplyBookmarkRequest) Reset() {
	*x = RemoveReplyBookmarkRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveReplyBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveReplyBookmarkRequest) ProtoMessage() {}

func (x *RemoveReplyBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveReplyBookmarkRequest.ProtoReflect.Descriptor instead.
func (*RemoveReplyBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{40}
}

func (x *RemoveReplyBookmarkRequest) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *RemoveReplyBookmarkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PinThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinThreadRequest) Reset() {
	*x = PinThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinThreadRequest) ProtoMessage() {}

func (x *PinThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinThreadRequest.ProtoReflect.Descriptor instead.
func (*PinThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{41}
}

func (x *PinThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *PinThreadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UnpinThreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ThreadId      string                 `protobuf:"bytes,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpinThreadRequest) Reset() {
	*x = UnpinThreadRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpinThreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpinThreadRequest) ProtoMessage() {}

func (x *UnpinThreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpinThreadRequest.ProtoReflect.Descriptor instead.
func (*UnpinThreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{42}
}

func (x *UnpinThreadRequest) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *UnpinThreadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PinReplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PinReplyRequest) Reset() {
	*x = PinReplyRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PinReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinReplyRequest) ProtoMessage() {}

func (x *PinReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinReplyRequest.ProtoReflect.Descriptor instead.
func (*PinReplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{43}
}

func (x *PinReplyRequest) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *PinReplyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UnpinReplyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReplyId       string                 `protobuf:"bytes,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpinReplyRequest) Reset() {
	*x = UnpinReplyRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpinReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpinReplyRequest) ProtoMessage() {}

func (x *UnpinReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpinReplyRequest.ProtoReflect.Descriptor instead.
func (*UnpinReplyRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{44}
}

func (x *UnpinReplyRequest) GetReplyId() string {
	if x != nil {
		return x.ReplyId
	}
	return ""
}

func (x *UnpinReplyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetRepliesByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepliesByUserRequest) Reset() {
	*x = GetRepliesByUserRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepliesByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepliesByUserRequest) ProtoMessage() {}

func (x *GetRepliesByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepliesByUserRequest.ProtoReflect.Descriptor instead.
func (*GetRepliesByUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{45}
}

func (x *GetRepliesByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRepliesByUserRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRepliesByUserRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetLikedThreadsByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLikedThreadsByUserRequest) Reset() {
	*x = GetLikedThreadsByUserRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLikedThreadsByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedThreadsByUserRequest) ProtoMessage() {}

func (x *GetLikedThreadsByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedThreadsByUserRequest.ProtoReflect.Descriptor instead.
func (*GetLikedThreadsByUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{46}
}

func (x *GetLikedThreadsByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLikedThreadsByUserRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLikedThreadsByUserRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMediaByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaByUserRequest) Reset() {
	*x = GetMediaByUserRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaByUserRequest) ProtoMessage() {}

func (x *GetMediaByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaByUserRequest.ProtoReflect.Descriptor instead.
func (*GetMediaByUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{47}
}

func (x *GetMediaByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMediaByUserRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetMediaByUserRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMediaByUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         []*MediaItem           `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaByUserResponse) Reset() {
	*x = GetMediaByUserResponse{}
	mi := &file_proto_thread_thread_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaByUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaByUserResponse) ProtoMessage() {}

func (x *GetMediaByUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaByUserResponse.ProtoReflect.Descriptor instead.
func (*GetMediaByUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{48}
}

func (x *GetMediaByUserResponse) GetMedia() []*MediaItem {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *GetMediaByUserResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MediaItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ThreadId      string                 `protobuf:"bytes,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaItem) Reset() {
	*x = MediaItem{}
	mi := &file_proto_thread_thread_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaItem) ProtoMessage() {}

func (x *MediaItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaItem.ProtoReflect.Descriptor instead.
func (*MediaItem) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{49}
}

func (x *MediaItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MediaItem) GetThreadId() string {
	if x != nil {
		return x.ThreadId
	}
	return ""
}

func (x *MediaItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MediaItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MediaItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetBookmarksByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBookmarksByUserRequest) Reset() {
	*x = GetBookmarksByUserRequest{}
	mi := &file_proto_thread_thread_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBookmarksByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookmarksByUserRequest) ProtoMessage() {}

func (x *GetBookmarksByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thread_thread_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookmarksByUserRequest.ProtoReflect.Descriptor instead.
func (*GetBookmarksByUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_thread_thread_proto_rawDescGZIP(), []int{50}
}

func (x *GetBookmarksByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBookmarksByUserRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetBookmarksByUserRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

var File_proto_thread_thread_proto protoreflect.FileDescriptor

const file_proto_thread_thread_proto_rawDesc = "" +
	"\n" +
	"\x19proto/thread/thread.proto\x12\x06thread\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xf3\x04\n" +
	"\x06Thread\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12#\n" +
	"\x05media\x18\x04 \x03(\v2\r.thread.MediaR\x05media\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"view_count\x18\a \x01(\x03R\tviewCount\x12%\n" +
	"\x04poll\x18\b \x01(\v2\f.thread.PollH\x00R\x04poll\x88\x01\x01\x12&\n" +
	"\fcommunity_id\x18\t \x01(\tH\x01R\vcommunityId\x88\x01\x01\x12 \n" +
	"\tis_pinned\x18\n" +
	" \x01(\bH\x02R\bisPinned\x88\x01\x01\x12'\n" +
	"\rwho_can_reply\x18\v \x01(\tH\x03R\vwhoCanReply\x88\x01\x01\x12B\n" +
	"\fscheduled_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampH\x04R\vscheduledAt\x88\x01\x01\x12.\n" +
	"\x10is_advertisement\x18\r \x01(\bH\x05R\x0fisAdvertisement\x88\x01\x01B\a\n" +
	"\x05_pollB\x0f\n" +
	"\r_community_idB\f\n" +
	"\n" +
	"_is_pinnedB\x10\n" +
	"\x0e_who_can_replyB\x0f\n" +
	"\r_scheduled_atB\x13\n" +
	"\x11_is_advertisement\"=\n" +
	"\x05Media\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"\xba\x01\n" +
	"\x04Poll\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bquestion\x18\x02 \x01(\tR\bquestion\x12,\n" +
	"\aoptions\x18\x03 \x03(\v2\x12.thread.PollOptionR\aoptions\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12!\n" +
	"\fis_anonymous\x18\x05 \x01(\bR\visAnonymous\"0\n" +
	"\n" +
	"PollOption\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"\xcf\x02\n" +
	"\x05Reply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tthread_id\x18\x02 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12#\n" +
	"\x05media\x18\x05 \x03(\v2\r.thread.MediaR\x05media\x12\x1b\n" +
	"\tparent_id\x18\x06 \x01(\tR\bparentId\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12 \n" +
	"\tis_pinned\x18\t \x01(\bH\x00R\bisPinned\x88\x01\x01B\f\n" +
	"\n" +
	"_is_pinned\"\xfc\x03\n" +
	"\x13CreateThreadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12#\n" +
	"\x05media\x18\x03 \x03(\v2\r.thread.MediaR\x05media\x12,\n" +
	"\x04poll\x18\x04 \x01(\v2\x13.thread.PollRequestH\x00R\x04poll\x88\x01\x01\x12&\n" +
	"\fcommunity_id\x18\x05 \x01(\tH\x01R\vcommunityId\x88\x01\x01\x12B\n" +
	"\fscheduled_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\vscheduledAt\x88\x01\x01\x12'\n" +
	"\rwho_can_reply\x18\a \x01(\tH\x03R\vwhoCanReply\x88\x01\x01\x12.\n" +
	"\x10is_advertisement\x18\b \x01(\bH\x04R\x0fisAdvertisement\x88\x01\x01\x12\x1a\n" +
	"\bhashtags\x18\t \x03(\tR\bhashtags\x12,\n" +
	"\x12mentioned_user_ids\x18\n" +
	" \x03(\tR\x10mentionedUserIdsB\a\n" +
	"\x05_pollB\x0f\n" +
	"\r_community_idB\x0f\n" +
	"\r_scheduled_atB\x10\n" +
	"\x0e_who_can_replyB\x13\n" +
	"\x11_is_advertisement\"\x9d\x01\n" +
	"\vPollRequest\x12\x1a\n" +
	"\bquestion\x18\x01 \x01(\tR\bquestion\x12\x18\n" +
	"\aoptions\x18\x02 \x03(\tR\aoptions\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12!\n" +
	"\fis_anonymous\x18\x04 \x01(\bR\visAnonymous\"/\n" +
	"\x10GetThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\"\\\n" +
	"\x17GetThreadsByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"@\n" +
	"\x14GetAllThreadsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"\xe8\x02\n" +
	"\x13UpdateThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12#\n" +
	"\x05media\x18\x04 \x03(\v2\r.thread.MediaR\x05media\x12 \n" +
	"\tis_pinned\x18\x05 \x01(\bH\x00R\bisPinned\x88\x01\x01\x12,\n" +
	"\x12add_category_names\x18\x06 \x03(\tR\x10addCategoryNames\x122\n" +
	"\x15remove_category_names\x18\a \x03(\tR\x13removeCategoryNames\x12!\n" +
	"\fadd_hashtags\x18\b \x03(\tR\vaddHashtags\x12'\n" +
	"\x0fremove_hashtags\x18\t \x03(\tR\x0eremoveHashtagsB\f\n" +
	"\n" +
	"_is_pinned\"K\n" +
	"\x13DeleteThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\x95\x02\n" +
	"\x12CreateReplyRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12#\n" +
	"\x05media\x18\x04 \x03(\v2\r.thread.MediaR\x05media\x12\x1b\n" +
	"\tparent_id\x18\x05 \x01(\tR\bparentId\x12+\n" +
	"\x0fparent_reply_id\x18\x06 \x01(\tH\x00R\rparentReplyId\x88\x01\x01\x12,\n" +
	"\x12mentioned_user_ids\x18\a \x03(\tR\x10mentionedUserIdsB\x12\n" +
	"\x10_parent_reply_id\"b\n" +
	"\x19GetRepliesByThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"\xb7\x01\n" +
	"\x12UpdateReplyRequest\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12#\n" +
	"\x05media\x18\x04 \x03(\v2\r.thread.MediaR\x05media\x12 \n" +
	"\tis_pinned\x18\x05 \x01(\bH\x00R\bisPinned\x88\x01\x01B\f\n" +
	"\n" +
	"_is_pinned\"H\n" +
	"\x12DeleteReplyRequest\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"I\n" +
	"\x11LikeThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"K\n" +
	"\x13UnlikeThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"F\n" +
	"\x10LikeReplyRequest\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"H\n" +
	"\x12UnlikeReplyRequest\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\x87\x01\n" +
	"\x13RepostThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12(\n" +
	"\radded_content\x18\x03 \x01(\tH\x00R\faddedContent\x88\x01\x01B\x10\n" +
	"\x0e_added_content\"K\n" +
	"\x13RemoveRepostRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"M\n" +
	"\x15BookmarkThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"M\n" +
	"\x15RemoveBookmarkRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"Y\n" +
	"\x11CreatePollRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12'\n" +
	"\x04poll\x18\x02 \x01(\v2\x13.thread.PollRequestR\x04poll\"`\n" +
	"\x0fVotePollRequest\x12\x17\n" +
	"\apoll_id\x18\x01 \x01(\tR\x06pollId\x12\x1b\n" +
	"\toption_id\x18\x02 \x01(\tR\boptionId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"0\n" +
	"\x15GetPollResultsRequest\x12\x17\n" +
	"\apoll_id\x18\x01 \x01(\tR\x06pollId\"\xab\x05\n" +
	"\x0eThreadResponse\x12&\n" +
	"\x06thread\x18\x01 \x01(\v2\x0e.thread.ThreadR\x06thread\x12 \n" +
	"\x04user\x18\x02 \x01(\v2\f.thread.UserR\x04user\x12\x1f\n" +
	"\vlikes_count\x18\x03 \x01(\x03R\n" +
	"likesCount\x12#\n" +
	"\rreplies_count\x18\x04 \x01(\x03R\frepliesCount\x12#\n" +
	"\rreposts_count\x18\x05 \x01(\x03R\frepostsCount\x12\"\n" +
	"\rliked_by_user\x18\x06 \x01(\bR\vlikedByUser\x12(\n" +
	"\x10reposted_by_user\x18\a \x01(\bR\x0erepostedByUser\x12,\n" +
	"\x12bookmarked_by_user\x18\b \x01(\bR\x10bookmarkedByUser\x12-\n" +
	"\x04poll\x18\t \x01(\v2\x14.thread.PollResponseH\x00R\x04poll\x88\x01\x01\x12\x1a\n" +
	"\bhashtags\x18\n" +
	" \x03(\tR\bhashtags\x12,\n" +
	"\x12mentioned_user_ids\x18\v \x03(\tR\x10mentionedUserIds\x12\x1b\n" +
	"\tis_repost\x18\f \x01(\bR\bisRepost\x121\n" +
	"\x12original_thread_id\x18\r \x01(\tH\x01R\x10originalThreadId\x88\x01\x01\x12D\n" +
	"\x0foriginal_thread\x18\x0e \x01(\v2\x16.thread.ThreadResponseH\x02R\x0eoriginalThread\x88\x01\x01\x12%\n" +
	"\x0ebookmark_count\x18\x0f \x01(\x03R\rbookmarkCountB\a\n" +
	"\x05_pollB\x15\n" +
	"\x13_original_thread_idB\x12\n" +
	"\x10_original_thread\"Y\n" +
	"\x0fThreadsResponse\x120\n" +
	"\athreads\x18\x01 \x03(\v2\x16.thread.ThreadResponseR\athreads\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"r\n" +
	"\x1eGetRepliesByParentReplyRequest\x12&\n" +
	"\x0fparent_reply_id\x18\x01 \x01(\tR\rparentReplyId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"\xb1\x03\n" +
	"\rReplyResponse\x12#\n" +
	"\x05reply\x18\x01 \x01(\v2\r.thread.ReplyR\x05reply\x12 \n" +
	"\x04user\x18\x02 \x01(\v2\f.thread.UserR\x04user\x12\x1f\n" +
	"\vlikes_count\x18\x03 \x01(\x03R\n" +
	"likesCount\x12\"\n" +
	"\rliked_by_user\x18\x04 \x01(\bR\vlikedByUser\x12,\n" +
	"\x12mentioned_user_ids\x18\x05 \x03(\tR\x10mentionedUserIds\x12-\n" +
	"\vparent_user\x18\x06 \x01(\v2\f.thread.UserR\n" +
	"parentUser\x12*\n" +
	"\x0eparent_content\x18\a \x01(\tH\x00R\rparentContent\x88\x01\x01\x12%\n" +
	"\x0ebookmark_count\x18\b \x01(\x03R\rbookmarkCount\x12,\n" +
	"\x12bookmarked_by_user\x18\t \x01(\bR\x10bookmarkedByUser\x12#\n" +
	"\rreplies_count\x18\n" +
	" \x01(\x03R\frepliesCountB\x11\n" +
	"\x0f_parent_content\"X\n" +
	"\x0fRepliesResponse\x12/\n" +
	"\areplies\x18\x01 \x03(\v2\x15.thread.ReplyResponseR\areplies\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xee\x01\n" +
	"\fPollResponse\x12 \n" +
	"\x04poll\x18\x01 \x01(\v2\f.thread.PollR\x04poll\x122\n" +
	"\aresults\x18\x02 \x03(\v2\x18.thread.PollOptionResultR\aresults\x12\x1f\n" +
	"\vtotal_votes\x18\x03 \x01(\x03R\n" +
	"totalVotes\x122\n" +
	"\x13user_vote_option_id\x18\x04 \x01(\tH\x00R\x10userVoteOptionId\x88\x01\x01\x12\x1b\n" +
	"\thas_ended\x18\x05 \x01(\bR\bhasEndedB\x16\n" +
	"\x14_user_vote_option_id\"\xd3\x01\n" +
	"\x13PollResultsResponse\x122\n" +
	"\aresults\x18\x01 \x03(\v2\x18.thread.PollOptionResultR\aresults\x12\x1f\n" +
	"\vtotal_votes\x18\x02 \x01(\x03R\n" +
	"totalVotes\x122\n" +
	"\x13user_vote_option_id\x18\x03 \x01(\tH\x00R\x10userVoteOptionId\x88\x01\x01\x12\x1b\n" +
	"\thas_ended\x18\x04 \x01(\bR\bhasEndedB\x16\n" +
	"\x14_user_vote_option_id\"y\n" +
	"\x10PollOptionResult\x12\x1b\n" +
	"\toption_id\x18\x01 \x01(\tR\boptionId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x14\n" +
	"\x05votes\x18\x03 \x01(\x03R\x05votes\x12\x1e\n" +
	"\n" +
	"percentage\x18\x04 \x01(\x02R\n" +
	"percentage\"\x97\x01\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12.\n" +
	"\x13profile_picture_url\x18\x04 \x01(\tR\x11profilePictureUrl\x12\x1f\n" +
	"\vis_verified\x18\x05 \x01(\bR\n" +
	"isVerified\";\n" +
	"\x0fHashtagResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"2\n" +
	"\x1aGetTrendingHashtagsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\"R\n" +
	"\x1bGetTrendingHashtagsResponse\x123\n" +
	"\bhashtags\x18\x01 \x03(\v2\x17.thread.HashtagResponseR\bhashtags\"J\n" +
	"\x14BookmarkReplyRequest\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"P\n" +
	"\x1aRemoveReplyBookmarkRequest\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"H\n" +
	"\x10PinThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"J\n" +
	"\x12UnpinThreadRequest\x12\x1b\n" +
	"\tthread_id\x18\x01 \x01(\tR\bthreadId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"E\n" +
	"\x0fPinReplyRequest\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"G\n" +
	"\x11UnpinReplyRequest\x12\x19\n" +
	"\breply_id\x18\x01 \x01(\tR\areplyId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\\\n" +
	"\x17GetRepliesByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"a\n" +
	"\x1cGetLikedThreadsByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"Z\n" +
	"\x15GetMediaByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"W\n" +
	"\x16GetMediaByUserResponse\x12'\n" +
	"\x05media\x18\x01 \x03(\v2\x11.thread.MediaItemR\x05media\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\x99\x01\n" +
	"\tMediaItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tthread_id\x18\x02 \x01(\tR\bthreadId\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"^\n" +
	"\x19GetBookmarksByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit2\xe1\x12\n" +
	"\rThreadService\x12C\n" +
	"\fCreateThread\x12\x1b.thread.CreateThreadRequest\x1a\x16.thread.ThreadResponse\x12A\n" +
	"\rGetThreadById\x12\x18.thread.GetThreadRequest\x1a\x16.thread.ThreadResponse\x12L\n" +
	"\x10GetThreadsByUser\x12\x1f.thread.GetThreadsByUserRequest\x1a\x17.thread.ThreadsResponse\x12F\n" +
	"\rGetAllThreads\x12\x1c.thread.GetAllThreadsRequest\x1a\x17.thread.ThreadsResponse\x12C\n" +
	"\fUpdateThread\x12\x1b.thread.UpdateThreadRequest\x1a\x16.thread.ThreadResponse\x12C\n" +
	"\fDeleteThread\x12\x1b.thread.DeleteThreadRequest\x1a\x16.google.protobuf.Empty\x12@\n" +
	"\vCreateReply\x12\x1a.thread.CreateReplyRequest\x1a\x15.thread.ReplyResponse\x12P\n" +
	"\x12GetRepliesByThread\x12!.thread.GetRepliesByThreadRequest\x1a\x17.thread.RepliesResponse\x12@\n" +
	"\vUpdateReply\x12\x1a.thread.UpdateReplyRequest\x1a\x15.thread.ReplyResponse\x12A\n" +
	"\vDeleteReply\x12\x1a.thread.DeleteReplyRequest\x1a\x16.google.protobuf.Empty\x12L\n" +
	"\x10GetRepliesByUser\x12\x1f.thread.GetRepliesByUserRequest\x1a\x17.thread.RepliesResponse\x12V\n" +
	"\x15GetLikedThreadsByUser\x12$.thread.GetLikedThreadsByUserRequest\x1a\x17.thread.ThreadsResponse\x12O\n" +
	"\x0eGetMediaByUser\x12\x1d.thread.GetMediaByUserRequest\x1a\x1e.thread.GetMediaByUserResponse\x12?\n" +
	"\n" +
	"LikeThread\x12\x19.thread.LikeThreadRequest\x1a\x16.google.protobuf.Empty\x12C\n" +
	"\fUnlikeThread\x12\x1b.thread.UnlikeThreadRequest\x1a\x16.google.protobuf.Empty\x12=\n" +
	"\tLikeReply\x12\x18.thread.LikeReplyRequest\x1a\x16.google.protobuf.Empty\x12A\n" +
	"\vUnlikeReply\x12\x1a.thread.UnlikeReplyRequest\x1a\x16.google.protobuf.Empty\x12C\n" +
	"\fRepostThread\x12\x1b.thread.RepostThreadRequest\x1a\x16.google.protobuf.Empty\x12C\n" +
	"\fRemoveRepost\x12\x1b.thread.RemoveRepostRequest\x1a\x16.google.protobuf.Empty\x12G\n" +
	"\x0eBookmarkThread\x12\x1d.thread.BookmarkThreadRequest\x1a\x16.google.protobuf.Empty\x12G\n" +
	"\x0eRemoveBookmark\x12\x1d.thread.RemoveBookmarkRequest\x1a\x16.google.protobuf.Empty\x12E\n" +
	"\rBookmarkReply\x12\x1c.thread.BookmarkReplyRequest\x1a\x16.google.protobuf.Empty\x12Q\n" +
	"\x13RemoveReplyBookmark\x12\".thread.RemoveReplyBookmarkRequest\x1a\x16.google.protobuf.Empty\x12=\n" +
	"\tPinThread\x12\x18.thread.PinThreadRequest\x1a\x16.google.protobuf.Empty\x12A\n" +
	"\vUnpinThread\x12\x1a.thread.UnpinThreadRequest\x1a\x16.google.protobuf.Empty\x12;\n" +
	"\bPinReply\x12\x17.thread.PinReplyRequest\x1a\x16.google.protobuf.Empty\x12?\n" +
	"\n" +
	"UnpinReply\x12\x19.thread.UnpinReplyRequest\x1a\x16.google.protobuf.Empty\x12=\n" +
	"\n" +
	"CreatePoll\x12\x19.thread.CreatePollRequest\x1a\x14.thread.PollResponse\x12;\n" +
	"\bVotePoll\x12\x17.thread.VotePollRequest\x1a\x16.google.protobuf.Empty\x12L\n" +
	"\x0eGetPollResults\x12\x1d.thread.GetPollResultsRequest\x1a\x1b.thread.PollResultsResponse\x12^\n" +
	"\x13GetTrendingHashtags\x12\".thread.GetTrendingHashtagsRequest\x1a#.thread.GetTrendingHashtagsResponse\x12\\\n" +
	"\x17GetRepliesByParentReply\x12&.thread.GetRepliesByParentReplyRequest\x1a\x17.thread.RepliesResponse\"\x00\x12R\n" +
	"\x12GetBookmarksByUser\x12!.thread.GetBookmarksByUserRequest\x1a\x17.thread.ThreadsResponse\"\x00B\x1cZ\x1aaycom/backend/proto/threadb\x06proto3"

var (
	file_proto_thread_thread_proto_rawDescOnce sync.Once
	file_proto_thread_thread_proto_rawDescData []byte
)

func file_proto_thread_thread_proto_rawDescGZIP() []byte {
	file_proto_thread_thread_proto_rawDescOnce.Do(func() {
		file_proto_thread_thread_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_thread_thread_proto_rawDesc), len(file_proto_thread_thread_proto_rawDesc)))
	})
	return file_proto_thread_thread_proto_rawDescData
}

var file_proto_thread_thread_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_proto_thread_thread_proto_goTypes = []any{
	(*Thread)(nil),                         // 0: thread.Thread
	(*Media)(nil),                          // 1: thread.Media
	(*Poll)(nil),                           // 2: thread.Poll
	(*PollOption)(nil),                     // 3: thread.PollOption
	(*Reply)(nil),                          // 4: thread.Reply
	(*CreateThreadRequest)(nil),            // 5: thread.CreateThreadRequest
	(*PollRequest)(nil),                    // 6: thread.PollRequest
	(*GetThreadRequest)(nil),               // 7: thread.GetThreadRequest
	(*GetThreadsByUserRequest)(nil),        // 8: thread.GetThreadsByUserRequest
	(*GetAllThreadsRequest)(nil),           // 9: thread.GetAllThreadsRequest
	(*UpdateThreadRequest)(nil),            // 10: thread.UpdateThreadRequest
	(*DeleteThreadRequest)(nil),            // 11: thread.DeleteThreadRequest
	(*CreateReplyRequest)(nil),             // 12: thread.CreateReplyRequest
	(*GetRepliesByThreadRequest)(nil),      // 13: thread.GetRepliesByThreadRequest
	(*UpdateReplyRequest)(nil),             // 14: thread.UpdateReplyRequest
	(*DeleteReplyRequest)(nil),             // 15: thread.DeleteReplyRequest
	(*LikeThreadRequest)(nil),              // 16: thread.LikeThreadRequest
	(*UnlikeThreadRequest)(nil),            // 17: thread.UnlikeThreadRequest
	(*LikeReplyRequest)(nil),               // 18: thread.LikeReplyRequest
	(*UnlikeReplyRequest)(nil),             // 19: thread.UnlikeReplyRequest
	(*RepostThreadRequest)(nil),            // 20: thread.RepostThreadRequest
	(*RemoveRepostRequest)(nil),            // 21: thread.RemoveRepostRequest
	(*BookmarkThreadRequest)(nil),          // 22: thread.BookmarkThreadRequest
	(*RemoveBookmarkRequest)(nil),          // 23: thread.RemoveBookmarkRequest
	(*CreatePollRequest)(nil),              // 24: thread.CreatePollRequest
	(*VotePollRequest)(nil),                // 25: thread.VotePollRequest
	(*GetPollResultsRequest)(nil),          // 26: thread.GetPollResultsRequest
	(*ThreadResponse)(nil),                 // 27: thread.ThreadResponse
	(*ThreadsResponse)(nil),                // 28: thread.ThreadsResponse
	(*GetRepliesByParentReplyRequest)(nil), // 29: thread.GetRepliesByParentReplyRequest
	(*ReplyResponse)(nil),                  // 30: thread.ReplyResponse
	(*RepliesResponse)(nil),                // 31: thread.RepliesResponse
	(*PollResponse)(nil),                   // 32: thread.PollResponse
	(*PollResultsResponse)(nil),            // 33: thread.PollResultsResponse
	(*PollOptionResult)(nil),               // 34: thread.PollOptionResult
	(*User)(nil),                           // 35: thread.User
	(*HashtagResponse)(nil),                // 36: thread.HashtagResponse
	(*GetTrendingHashtagsRequest)(nil),     // 37: thread.GetTrendingHashtagsRequest
	(*GetTrendingHashtagsResponse)(nil),    // 38: thread.GetTrendingHashtagsResponse
	(*BookmarkReplyRequest)(nil),           // 39: thread.BookmarkReplyRequest
	(*RemoveReplyBookmarkRequest)(nil),     // 40: thread.RemoveReplyBookmarkRequest
	(*PinThreadRequest)(nil),               // 41: thread.PinThreadRequest
	(*UnpinThreadRequest)(nil),             // 42: thread.UnpinThreadRequest
	(*PinReplyRequest)(nil),                // 43: thread.PinReplyRequest
	(*UnpinReplyRequest)(nil),              // 44: thread.UnpinReplyRequest
	(*GetRepliesByUserRequest)(nil),        // 45: thread.GetRepliesByUserRequest
	(*GetLikedThreadsByUserRequest)(nil),   // 46: thread.GetLikedThreadsByUserRequest
	(*GetMediaByUserRequest)(nil),          // 47: thread.GetMediaByUserRequest
	(*GetMediaByUserResponse)(nil),         // 48: thread.GetMediaByUserResponse
	(*MediaItem)(nil),                      // 49: thread.MediaItem
	(*GetBookmarksByUserRequest)(nil),      // 50: thread.GetBookmarksByUserRequest
	(*timestamppb.Timestamp)(nil),          // 51: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                  // 52: google.protobuf.Empty
}
var file_proto_thread_thread_proto_depIdxs = []int32{
	1,  // 0: thread.Thread.media:type_name -> thread.Media
	51, // 1: thread.Thread.created_at:type_name -> google.protobuf.Timestamp
	51, // 2: thread.Thread.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 3: thread.Thread.poll:type_name -> thread.Poll
	51, // 4: thread.Thread.scheduled_at:type_name -> google.protobuf.Timestamp
	3,  // 5: thread.Poll.options:type_name -> thread.PollOption
	51, // 6: thread.Poll.end_time:type_name -> google.protobuf.Timestamp
	1,  // 7: thread.Reply.media:type_name -> thread.Media
	51, // 8: thread.Reply.created_at:type_name -> google.protobuf.Timestamp
	51, // 9: thread.Reply.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 10: thread.CreateThreadRequest.media:type_name -> thread.Media
	6,  // 11: thread.CreateThreadRequest.poll:type_name -> thread.PollRequest
	51, // 12: thread.CreateThreadRequest.scheduled_at:type_name -> google.protobuf.Timestamp
	51, // 13: thread.PollRequest.end_time:type_name -> google.protobuf.Timestamp
	1,  // 14: thread.UpdateThreadRequest.media:type_name -> thread.Media
	1,  // 15: thread.CreateReplyRequest.media:type_name -> thread.Media
	1,  // 16: thread.UpdateReplyRequest.media:type_name -> thread.Media
	6,  // 17: thread.CreatePollRequest.poll:type_name -> thread.PollRequest
	0,  // 18: thread.ThreadResponse.thread:type_name -> thread.Thread
	35, // 19: thread.ThreadResponse.user:type_name -> thread.User
	32, // 20: thread.ThreadResponse.poll:type_name -> thread.PollResponse
	27, // 21: thread.ThreadResponse.original_thread:type_name -> thread.ThreadResponse
	27, // 22: thread.ThreadsResponse.threads:type_name -> thread.ThreadResponse
	4,  // 23: thread.ReplyResponse.reply:type_name -> thread.Reply
	35, // 24: thread.ReplyResponse.user:type_name -> thread.User
	35, // 25: thread.ReplyResponse.parent_user:type_name -> thread.User
	30, // 26: thread.RepliesResponse.replies:type_name -> thread.ReplyResponse
	2,  // 27: thread.PollResponse.poll:type_name -> thread.Poll
	34, // 28: thread.PollResponse.results:type_name -> thread.PollOptionResult
	34, // 29: thread.PollResultsResponse.results:type_name -> thread.PollOptionResult
	36, // 30: thread.GetTrendingHashtagsResponse.hashtags:type_name -> thread.HashtagResponse
	49, // 31: thread.GetMediaByUserResponse.media:type_name -> thread.MediaItem
	51, // 32: thread.MediaItem.created_at:type_name -> google.protobuf.Timestamp
	5,  // 33: thread.ThreadService.CreateThread:input_type -> thread.CreateThreadRequest
	7,  // 34: thread.ThreadService.GetThreadById:input_type -> thread.GetThreadRequest
	8,  // 35: thread.ThreadService.GetThreadsByUser:input_type -> thread.GetThreadsByUserRequest
	9,  // 36: thread.ThreadService.GetAllThreads:input_type -> thread.GetAllThreadsRequest
	10, // 37: thread.ThreadService.UpdateThread:input_type -> thread.UpdateThreadRequest
	11, // 38: thread.ThreadService.DeleteThread:input_type -> thread.DeleteThreadRequest
	12, // 39: thread.ThreadService.CreateReply:input_type -> thread.CreateReplyRequest
	13, // 40: thread.ThreadService.GetRepliesByThread:input_type -> thread.GetRepliesByThreadRequest
	14, // 41: thread.ThreadService.UpdateReply:input_type -> thread.UpdateReplyRequest
	15, // 42: thread.ThreadService.DeleteReply:input_type -> thread.DeleteReplyRequest
	45, // 43: thread.ThreadService.GetRepliesByUser:input_type -> thread.GetRepliesByUserRequest
	46, // 44: thread.ThreadService.GetLikedThreadsByUser:input_type -> thread.GetLikedThreadsByUserRequest
	47, // 45: thread.ThreadService.GetMediaByUser:input_type -> thread.GetMediaByUserRequest
	16, // 46: thread.ThreadService.LikeThread:input_type -> thread.LikeThreadRequest
	17, // 47: thread.ThreadService.UnlikeThread:input_type -> thread.UnlikeThreadRequest
	18, // 48: thread.ThreadService.LikeReply:input_type -> thread.LikeReplyRequest
	19, // 49: thread.ThreadService.UnlikeReply:input_type -> thread.UnlikeReplyRequest
	20, // 50: thread.ThreadService.RepostThread:input_type -> thread.RepostThreadRequest
	21, // 51: thread.ThreadService.RemoveRepost:input_type -> thread.RemoveRepostRequest
	22, // 52: thread.ThreadService.BookmarkThread:input_type -> thread.BookmarkThreadRequest
	23, // 53: thread.ThreadService.RemoveBookmark:input_type -> thread.RemoveBookmarkRequest
	39, // 54: thread.ThreadService.BookmarkReply:input_type -> thread.BookmarkReplyRequest
	40, // 55: thread.ThreadService.RemoveReplyBookmark:input_type -> thread.RemoveReplyBookmarkRequest
	41, // 56: thread.ThreadService.PinThread:input_type -> thread.PinThreadRequest
	42, // 57: thread.ThreadService.UnpinThread:input_type -> thread.UnpinThreadRequest
	43, // 58: thread.ThreadService.PinReply:input_type -> thread.PinReplyRequest
	44, // 59: thread.ThreadService.UnpinReply:input_type -> thread.UnpinReplyRequest
	24, // 60: thread.ThreadService.CreatePoll:input_type -> thread.CreatePollRequest
	25, // 61: thread.ThreadService.VotePoll:input_type -> thread.VotePollRequest
	26, // 62: thread.ThreadService.GetPollResults:input_type -> thread.GetPollResultsRequest
	37, // 63: thread.ThreadService.GetTrendingHashtags:input_type -> thread.GetTrendingHashtagsRequest
	29, // 64: thread.ThreadService.GetRepliesByParentReply:input_type -> thread.GetRepliesByParentReplyRequest
	50, // 65: thread.ThreadService.GetBookmarksByUser:input_type -> thread.GetBookmarksByUserRequest
	27, // 66: thread.ThreadService.CreateThread:output_type -> thread.ThreadResponse
	27, // 67: thread.ThreadService.GetThreadById:output_type -> thread.ThreadResponse
	28, // 68: thread.ThreadService.GetThreadsByUser:output_type -> thread.ThreadsResponse
	28, // 69: thread.ThreadService.GetAllThreads:output_type -> thread.ThreadsResponse
	27, // 70: thread.ThreadService.UpdateThread:output_type -> thread.ThreadResponse
	52, // 71: thread.ThreadService.DeleteThread:output_type -> google.protobuf.Empty
	30, // 72: thread.ThreadService.CreateReply:output_type -> thread.ReplyResponse
	31, // 73: thread.ThreadService.GetRepliesByThread:output_type -> thread.RepliesResponse
	30, // 74: thread.ThreadService.UpdateReply:output_type -> thread.ReplyResponse
	52, // 75: thread.ThreadService.DeleteReply:output_type -> google.protobuf.Empty
	31, // 76: thread.ThreadService.GetRepliesByUser:output_type -> thread.RepliesResponse
	28, // 77: thread.ThreadService.GetLikedThreadsByUser:output_type -> thread.ThreadsResponse
	48, // 78: thread.ThreadService.GetMediaByUser:output_type -> thread.GetMediaByUserResponse
	52, // 79: thread.ThreadService.LikeThread:output_type -> google.protobuf.Empty
	52, // 80: thread.ThreadService.UnlikeThread:output_type -> google.protobuf.Empty
	52, // 81: thread.ThreadService.LikeReply:output_type -> google.protobuf.Empty
	52, // 82: thread.ThreadService.UnlikeReply:output_type -> google.protobuf.Empty
	52, // 83: thread.ThreadService.RepostThread:output_type -> google.protobuf.Empty
	52, // 84: thread.ThreadService.RemoveRepost:output_type -> google.protobuf.Empty
	52, // 85: thread.ThreadService.BookmarkThread:output_type -> google.protobuf.Empty
	52, // 86: thread.ThreadService.RemoveBookmark:output_type -> google.protobuf.Empty
	52, // 87: thread.ThreadService.BookmarkReply:output_type -> google.protobuf.Empty
	52, // 88: thread.ThreadService.RemoveReplyBookmark:output_type -> google.protobuf.Empty
	52, // 89: thread.ThreadService.PinThread:output_type -> google.protobuf.Empty
	52, // 90: thread.ThreadService.UnpinThread:output_type -> google.protobuf.Empty
	52, // 91: thread.ThreadService.PinReply:output_type -> google.protobuf.Empty
	52, // 92: thread.ThreadService.UnpinReply:output_type -> google.protobuf.Empty
	32, // 93: thread.ThreadService.CreatePoll:output_type -> thread.PollResponse
	52, // 94: thread.ThreadService.VotePoll:output_type -> google.protobuf.Empty
	33, // 95: thread.ThreadService.GetPollResults:output_type -> thread.PollResultsResponse
	38, // 96: thread.ThreadService.GetTrendingHashtags:output_type -> thread.GetTrendingHashtagsResponse
	31, // 97: thread.ThreadService.GetRepliesByParentReply:output_type -> thread.RepliesResponse
	28, // 98: thread.ThreadService.GetBookmarksByUser:output_type -> thread.ThreadsResponse
	66, // [66:99] is the sub-list for method output_type
	33, // [33:66] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_proto_thread_thread_proto_init() }
func file_proto_thread_thread_proto_init() {
	if File_proto_thread_thread_proto != nil {
		return
	}
	file_proto_thread_thread_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[5].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[10].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[12].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[14].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[20].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[27].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[30].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[32].OneofWrappers = []any{}
	file_proto_thread_thread_proto_msgTypes[33].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_thread_thread_proto_rawDesc), len(file_proto_thread_thread_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_thread_thread_proto_goTypes,
		DependencyIndexes: file_proto_thread_thread_proto_depIdxs,
		MessageInfos:      file_proto_thread_thread_proto_msgTypes,
	}.Build()
	File_proto_thread_thread_proto = out.File
	file_proto_thread_thread_proto_goTypes = nil
	file_proto_thread_thread_proto_depIdxs = nil
}
