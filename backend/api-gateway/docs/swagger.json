{
  "swagger": "2.0",
  "info": {
    "description": "API Gateway for AYCOM microservices",
    "title": "AYCOM API Gateway",
    "contact": {
      "name": "API Support",
      "url": "https://github.com/Acad/aycom",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "schemes": ["http", "https"],
  "paths": {
    "/health": {
      "get": {
        "description": "Get the status of the API",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["health"],
        "summary": "Health check endpoint",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "ok"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "description": "Authenticate user and get JWT tokens",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "User login",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "User login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {"type": "boolean", "example": true},
                "message": {"type": "string", "example": "Login successful"},
                "access_token": {"type": "string"},
                "refresh_token": {"type": "string"},
                "user_id": {"type": "string", "format": "uuid"},
                "token_type": {"type": "string", "example": "Bearer"},
                "expires_in": {"type": "integer", "example": 3600}
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {"type": "boolean", "example": false},
                "message": {"type": "string", "example": "Invalid email or password"},
                "code": {"type": "string", "example": "INVALID_CREDENTIALS"}
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Register a new user account",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "User registration",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User registration data",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["name", "username", "email", "password", "confirm_password", "gender", "date_of_birth", "securityQuestion", "securityAnswer", "recaptcha_token"],
              "properties": {
                "name": {"type": "string", "example": "John Doe"},
                "username": {"type": "string", "example": "johndoe"},
                "email": {"type": "string", "format": "email", "example": "john@example.com"},
                "password": {"type": "string", "format": "password", "example": "securepass123"},
                "confirm_password": {"type": "string", "format": "password", "example": "securepass123"},
                "gender": {"type": "string", "example": "male"},
                "date_of_birth": {"type": "string", "format": "date", "example": "1990-01-01"},
                "securityQuestion": {"type": "string", "example": "What was your first pet's name?"},
                "securityAnswer": {"type": "string", "example": "Rex"},
                "subscribeToNewsletter": {"type": "boolean", "example": true},
                "recaptcha_token": {"type": "string"}
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registration successful",
            "schema": {
              "type": "object",
              "properties": {
                "success": {"type": "boolean", "example": true},
                "message": {"type": "string", "example": "User registered successfully"}
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "type": "object",
              "properties": {
                "success": {"type": "boolean", "example": false},
                "message": {"type": "string"},
                "code": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "description": "Refresh access token using a refresh token",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "Refresh access token",
        "parameters": [
          {
            "name": "token",
            "in": "body",
            "description": "Refresh token data",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["refresh_token"],
              "properties": {
                "refresh_token": {"type": "string"}
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {"type": "boolean", "example": true},
                "message": {"type": "string", "example": "Token refreshed successfully"},
                "access_token": {"type": "string"},
                "refresh_token": {"type": "string"},
                "user_id": {"type": "string", "format": "uuid"},
                "token_type": {"type": "string", "example": "Bearer"},
                "expires_in": {"type": "integer", "example": 3600}
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "schema": {
              "type": "object",
              "properties": {
                "success": {"type": "boolean", "example": false},
                "message": {"type": "string", "example": "Invalid or expired refresh token"},
                "code": {"type": "string", "example": "INVALID_TOKEN"}
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
} 