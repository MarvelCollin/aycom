basePath: /api/v1
definitions:
  handlers.AuthServiceResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      message:
        type: string
      refresh_token:
        type: string
      success:
        type: boolean
      token_type:
        type: string
      user_id:
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      code:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.LogoutRequest:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    required:
    - access_token
    - refresh_token
    type: object
  handlers.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  handlers.RegisterRequest:
    properties:
      banner_url:
        type: string
      confirm_password:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      gender:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
      profile_picture_url:
        type: string
      recaptcha_token:
        type: string
      securityAnswer:
        type: string
      securityQuestion:
        type: string
      subscribeToNewsletter:
        type: boolean
      username:
        type: string
    required:
    - confirm_password
    - date_of_birth
    - email
    - gender
    - name
    - password
    - recaptcha_token
    - securityAnswer
    - securityQuestion
    - username
    type: object
  handlers.RegisterResponse:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  handlers.ResendCodeRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  handlers.UpdateUserRequest:
    properties:
      banner_url:
        type: string
      bio:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      gender:
        type: string
      id:
        type: string
      location:
        type: string
      name:
        type: string
      profile_picture_url:
        type: string
      username:
        type: string
      website:
        type: string
    type: object
  handlers.VerifyEmailRequest:
    properties:
      email:
        type: string
      verification_code:
        type: string
    required:
    - email
    - verification_code
    type: object
host: localhost:8081
info:
  contact: {}
  description: API Gateway for AYCOM microservices
  title: AYCOM API Gateway
  version: "1.0"
paths:
  /api/v1/auth/google:
    post:
      consumes:
      - application/json
      description: Authenticates a user using Google OAuth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthServiceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Authenticate with Google
      tags:
      - auth
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access token
      parameters:
      - description: Login Credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthServiceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: User login
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidate user tokens and logout
      parameters:
      - description: Logout Request
        in: body
        name: logout
        required: true
        schema:
          $ref: '#/definitions/handlers.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Logout user
      tags:
      - auth
  /api/v1/auth/oauth-config:
    get:
      description: Returns OAuth client IDs and configuration
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get OAuth configuration
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Issues a new access token using a refresh token
      parameters:
      - description: Refresh Token
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AuthServiceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Refresh access token
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: Registration Information
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /api/v1/auth/register-with-media:
    post:
      consumes:
      - multipart/form-data
      description: Register a new user with profile picture and banner image
      parameters:
      - description: Profile picture
        in: formData
        name: profile_picture
        type: file
      - description: Banner image
        in: formData
        name: banner_image
        type: file
      - description: Full name
        in: formData
        name: name
        required: true
        type: string
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Email address
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Confirm password
        in: formData
        name: confirm_password
        required: true
        type: string
      - description: Gender
        in: formData
        name: gender
        required: true
        type: string
      - description: Date of birth
        in: formData
        name: date_of_birth
        required: true
        type: string
      - description: Security question
        in: formData
        name: security_question
        required: true
        type: string
      - description: Security answer
        in: formData
        name: security_answer
        required: true
        type: string
      - description: Subscribe to newsletter
        in: formData
        name: subscribe_to_newsletter
        type: boolean
      - description: reCAPTCHA token
        in: formData
        name: recaptcha_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Register with media files
      tags:
      - auth
  /api/v1/auth/resend-verification:
    post:
      consumes:
      - application/json
      description: Resends a verification code to the user's email
      parameters:
      - description: Email to resend verification code
        in: body
        name: resendRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.ResendCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Resend verification code
      tags:
      - auth
  /api/v1/auth/verify-email:
    post:
      consumes:
      - application/json
      description: Verifies a user's email using a verification code
      parameters:
      - description: Email Verification Information
        in: body
        name: verification
        required: true
        schema:
          $ref: '#/definitions/handlers.VerifyEmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Verify email address
      tags:
      - auth
  /api/v1/payments:
    post:
      consumes:
      - application/json
      description: Create a new payment
      parameters:
      - description: Payment data
        in: body
        name: payment
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new payment
      tags:
      - payments
  /api/v1/payments/{id}:
    get:
      consumes:
      - application/json
      description: Get a specific payment by its ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get payment by ID
      tags:
      - payments
  /api/v1/payments/history:
    get:
      consumes:
      - application/json
      description: Get the payment history for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get payment history
      tags:
      - payments
  /api/v1/products:
    get:
      consumes:
      - application/json
      description: Get a list of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new product
      tags:
      - products
  /api/v1/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a specific product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product data to update
        in: body
        name: product
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update product
      tags:
      - products
  /api/v1/threads:
    post:
      consumes:
      - application/json
      description: Create a new thread/post
      parameters:
      - description: Thread data
        in: body
        name: thread
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new thread
      tags:
      - threads
  /api/v1/threads/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing thread
      parameters:
      - description: Thread ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete thread
      tags:
      - threads
    get:
      consumes:
      - application/json
      description: Get a specific thread by its ID
      parameters:
      - description: Thread ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get thread by ID
      tags:
      - threads
    put:
      consumes:
      - application/json
      description: Update an existing thread
      parameters:
      - description: Thread ID
        in: path
        name: id
        required: true
        type: string
      - description: Thread data to update
        in: body
        name: thread
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update thread
      tags:
      - threads
  /api/v1/threads/media:
    post:
      consumes:
      - multipart/form-data
      description: Upload media files for a thread
      parameters:
      - description: Media file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Upload thread media
      tags:
      - threads
  /api/v1/threads/user/{id}:
    get:
      consumes:
      - application/json
      description: Get all threads created by a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get threads by user
      tags:
      - threads
  /api/v1/users/profile:
    get:
      consumes:
      - application/json
      description: Get the profile of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the profile of the authenticated user
      parameters:
      - description: User profile data to update
        in: body
        name: profileUpdate
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user profile
      tags:
      - users
  /health:
    get:
      description: Returns health status of the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Check API health
      tags:
      - health
swagger: "2.0"
